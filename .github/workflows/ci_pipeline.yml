name: Continuous Integration

on:
  push:
    branches:
      - main

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Unit Test
        run: mvn clean test sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=dragonfield -Dsonar.projectKey=dragonfield_spring-kafka-sample -Dsonar.login=${{secrets.SONAR_LOGIN}}

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build
        working-directory: ./spring-kafka-api
        run: mvn clean install -Dmaven.test.skip=true

      - name: Integration Test
        working-directory: ./integration-test
        run: mvn clean verify

      - name: Clean up Docker images
        if: always()
        run: docker-compose down --rmi all --volumes
        continue-on-error: true
